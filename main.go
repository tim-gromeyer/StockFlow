package main

import (
	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
	"github.com/tim/StockFlow/database"
	_ "github.com/tim/StockFlow/docs" // docs is generated by Swag CLI
	"github.com/tim/StockFlow/handlers"
	"github.com/tim/StockFlow/middleware"
	"github.com/tim/StockFlow/services"
	"github.com/tim/StockFlow/websocket"
)

// @title StockFlow API
// @version 1.0
// @description This is a sample server for a stock market simulator.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8080
// @BasePath /
func main() {
	database.InitDatabase()

	hub := websocket.NewHub()
	go hub.Run()

	// Start the market simulation
	services.StartMarketSimulation(hub)

	r := gin.Default()

	// Add CORS middleware
	config := cors.DefaultConfig()
	config.AllowAllOrigins = true
	config.AllowMethods = []string{"GET", "POST", "PUT", "DELETE", "OPTIONS"}
	config.AllowHeaders = []string{"Origin", "Content-Type", "Accept", "Authorization"}
	config.ExposeHeaders = []string{"Content-Length"}
	config.AllowCredentials = true
	r.Use(cors.New(config))

	auth := r.Group("/auth")
	{
		auth.POST("/register", handlers.Register)
		auth.POST("/login", handlers.Login)
	}

	api := r.Group("/api")
	api.Use(middleware.AuthMiddleware())
	{
		api.POST("/buy", handlers.BuyStock)
		api.POST("/sell", handlers.SellStock)
		api.GET("/portfolio/:user_id", handlers.GetPortfolio)
		api.GET("/balance/:user_id", handlers.GetBalance)
	}

	// WebSocket endpoint for live price updates
	r.GET("/ws/prices", func(c *gin.Context) {
		websocket.ServeWs(hub, c.Writer, c.Request)
	})

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.GET("/health", handlers.HealthCheck)

	r.Run(":8080")
}
